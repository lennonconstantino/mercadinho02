buildscript {
	ext {
		springBootVersion = '3.2.5-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.palantir.gradle.docker:gradle-docker:0.36.0")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.palantir.docker' version '0.36.0'
	//id "com.palantir.docker-run" version "0.36.0"
}

//group = 'br.com.lennon'
group = 'lennomolliver'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

tasks.bootJar {enabled = true}
tasks.jar {enabled = true}

bootJar {
	archiveBaseName = 'mercadinho02'
	//archiveVersion = '1.0.0'
	//this.packageName='asdfa'
	//mainClassName = "br.com.lennon.mercadinho02.Mercadinho02Application"
}

task unpack(type: Copy) {
	dependsOn bootJar
	//print(tasks.bootJar.outputs.files.singleFile)
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	//name "${project.name}:${project.version}"
	//print("${project.name}:${project.version}")
	name "${project.group}/${bootJar.archiveBaseName.get()}"
	//print("${project.group}/${bootJar.archiveBaseName.get()}")
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY':"dependency"])
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
